name: "AlexNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  #top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "examples/market1501/market1501_anchor_train_lmdb_part_3"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data_s"
  #top: "label_s"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "examples/market1501/market1501_pos_train_lmdb_part_3"
    batch_size: 32
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data_n"
  #top: "label_n"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  data_param {
    source: "examples/market1501/market1501_neg_train_lmdb_part_3"
    batch_size: 32
    backend: LMDB
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
	name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
	name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
	name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
	name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
	name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
	name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_encode"
  type: "InnerProduct"
  bottom: "fc7"
  top: "hash"
  param {
	name: "fc8_encode_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc8_encode_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {   
  name: "sigmoid_hash" 
  type: "Sigmoid"
  bottom: "hash" 
  top: "hash" 
}  

layer {
  name: "conv1_s"
  type: "Convolution"
  bottom: "data_s"
  top: "conv1_s"
  param {
	name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_s"
  type: "ReLU"
  bottom: "conv1_s"
  top: "conv1_s"
}
layer {
  name: "norm1_s"
  type: "LRN"
  bottom: "conv1_s"
  top: "norm1_s"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1_s"
  type: "Pooling"
  bottom: "norm1_s"
  top: "pool1_s"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_s"
  type: "Convolution"
  bottom: "pool1_s"
  top: "conv2_s"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2_s"
  type: "ReLU"
  bottom: "conv2_s"
  top: "conv2_s"
}
layer {
  name: "norm2_s"
  type: "LRN"
  bottom: "conv2_s"
  top: "norm2_s"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2_s"
  type: "Pooling"
  bottom: "norm2_s"
  top: "pool2_s"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_s"
  type: "Convolution"
  bottom: "pool2_s"
  top: "conv3_s"
  param {
	name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_s"
  type: "ReLU"
  bottom: "conv3_s"
  top: "conv3_s"
}
layer {
  name: "conv4_s"
  type: "Convolution"
  bottom: "conv3_s"
  top: "conv4_s"
  param {
	name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4_s"
  type: "ReLU"
  bottom: "conv4_s"
  top: "conv4_s"
}
layer {
  name: "conv5_s"
  type: "Convolution"
  bottom: "conv4_s"
  top: "conv5_s"
  param {
	name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5_s"
  type: "ReLU"
  bottom: "conv5_s"
  top: "conv5_s"
}
layer {
  name: "pool5_s"
  type: "Pooling"
  bottom: "conv5_s"
  top: "pool5_s"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_s"
  type: "InnerProduct"
  bottom: "pool5_s"
  top: "fc6_s"
  param {
	name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6_s"
  type: "ReLU"
  bottom: "fc6_s"
  top: "fc6_s"
}
layer {
  name: "drop6_s"
  type: "Dropout"
  bottom: "fc6_s"
  top: "fc6_s"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_s"
  type: "InnerProduct"
  bottom: "fc6_s"
  top: "fc7_s"
  param {
	name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7_s"
  type: "ReLU"
  bottom: "fc7_s"
  top: "fc7_s"
}
layer {
  name: "drop7_s"
  type: "Dropout"
  bottom: "fc7_s"
  top: "fc7_s"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_encode_s"
  type: "InnerProduct"
  bottom: "fc7_s"
  top: "hash_s"
  param {
	name: "fc8_encode_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc8_encode_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {   
  name: "sigmoid_hash_s" 
  type: "Sigmoid"
  bottom: "hash_s" 
  top: "hash_s" 
}  

layer {
  name: "conv1_n"
  type: "Convolution"
  bottom: "data_n"
  top: "conv1_n"
  param {
	name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_n"
  type: "ReLU"
  bottom: "conv1_n"
  top: "conv1_n"
}
layer {
  name: "norm1_n"
  type: "LRN"
  bottom: "conv1_n"
  top: "norm1_n"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1_n"
  type: "Pooling"
  bottom: "norm1_n"
  top: "pool1_n"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_n"
  type: "Convolution"
  bottom: "pool1_n"
  top: "conv2_n"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2_n"
  type: "ReLU"
  bottom: "conv2_n"
  top: "conv2_n"
}
layer {
  name: "norm2_n"
  type: "LRN"
  bottom: "conv2_n"
  top: "norm2_n"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2_n"
  type: "Pooling"
  bottom: "norm2_n"
  top: "pool2_n"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_n"
  type: "Convolution"
  bottom: "pool2_n"
  top: "conv3_n"
  param {
	name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_n"
  type: "ReLU"
  bottom: "conv3_n"
  top: "conv3_n"
}
layer {
  name: "conv4_n"
  type: "Convolution"
  bottom: "conv3_n"
  top: "conv4_n"
  param {
	name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4_n"
  type: "ReLU"
  bottom: "conv4_n"
  top: "conv4_n"
}
layer {
  name: "conv5_n"
  type: "Convolution"
  bottom: "conv4_n"
  top: "conv5_n"
  param {
	name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5_n"
  type: "ReLU"
  bottom: "conv5_n"
  top: "conv5_n"
}
layer {
  name: "pool5_n"
  type: "Pooling"
  bottom: "conv5_n"
  top: "pool5_n"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_n"
  type: "InnerProduct"
  bottom: "pool5_n"
  top: "fc6_n"
  param {
	name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6_n"
  type: "ReLU"
  bottom: "fc6_n"
  top: "fc6_n"
}
layer {
  name: "drop6_n"
  type: "Dropout"
  bottom: "fc6_n"
  top: "fc6_n"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_n"
  type: "InnerProduct"
  bottom: "fc6_n"
  top: "fc7_n"
  param {
	name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7_n"
  type: "ReLU"
  bottom: "fc7_n"
  top: "fc7_n"
}
layer {
  name: "drop7_n"
  type: "Dropout"
  bottom: "fc7_n"
  top: "fc7_n"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_encode_n"
  type: "InnerProduct"
  bottom: "fc7_n"
  top: "hash_n"
  param {
	name: "fc8_encode_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
	name: "fc8_encode_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {   
  name: "sigmoid_hash_n" 
  type: "Sigmoid"
  bottom: "hash_n" 
  top: "hash_n" 
}  

layer {
  name: "loss"
  type: "TripletRankLoss"
  bottom: "hash"
  bottom: "hash_s"
  bottom: "hash_n"
  top: "loss"
  triplet_rank_loss_param {
     margin: 2
  }   
}
